version: "3.8"

services:
  pgdb:
    image: postgres
    container_name: pgdb
    volumes:
      - postgres_data:/lib/postgresql/data
    env_file:
      - ./dev/dev.env

  django:
    build:
      context: ./backend
      dockerfile: ../dev/django.dockerfile
    container_name: django
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000 &&
      python manage.py generateschema --file openapi-schema.yml"
    volumes:
      - ./backend/:/code
    ports:
      - "0.0.0.0:8000:8000"
    env_file:
      - ./dev/dev.env
    depends_on:
      - pgdb

  webpack:
    build:
      context: ./frontend
      dockerfile: ../dev/webpack.dockerfile
    container_name: webpack
    command: npm --prefix ./frontend run watch # We need the prefix because we are mounting from parent rather than frontend
    env_file:
      - ./dev/dev.env
    volumes:
      - ./:/code # The webpack output files are now in a sibling directory, therefore, we need to mount to parent

  linter:
    profiles: ["lint"]
    build:
      context: .
      dockerfile: ./dev/linter.dockerfile
    container_name: linter
    environment:
      - PRE_COMMIT_HOME=${HOME}/.cache/pre-commit
    user: ${UID}:${GID}
    env_file:
      - ./dev/linter.env
    volumes:
      - .:/src:rw
      - ${HOME}/.cache:${HOME}/.cache:rw

volumes:
  postgres_data:
