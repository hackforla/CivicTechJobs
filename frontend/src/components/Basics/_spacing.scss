// External Imports
@use "sass:list";
@use "sass:map";

// Internal Imports
@use "./breakpoints" as bp;

$margin-abbrs: (
  "m": margin,
  "mt": margin-top,
  "mr": margin-right,
  "mb": margin-bottom,
  "ml": margin-left,
  "mx": margin-right margin-left,
  "my": margin-top margin-bottom,
);
$padding-abbrs: (
  "p": padding,
  "pt": padding-top,
  "pr": padding-right,
  "pb": padding-bottom,
  "pl": padding-left,
  "px": padding-right padding-left,
  "py": padding-top padding-bottom,
);
$gap-abbrs: (
  "gap": gap,
  "gap-x": column-gap,
  "gap-y": row-gap,
);
$spacing-abbrs: map.merge(map.merge($margin-abbrs, $padding-abbrs), $gap-abbrs);
$spacing-sizes: 0, 1, 2, 3, 4, 5, 6;

/***********************************************
*** Spacing classes for margins and paddings ***
***********************************************/

@mixin spacing-size($name, $size) {
  @if list.index("mx" "my" "px" "py", $name) {
    @each $attr in map.get($spacing-abbrs, $name) {
      #{$attr}: $size * 8px;
    }
  } @else {
    #{map.get($spacing-abbrs, $name)}: $size * 8px;
  }
}

@each $name in map.keys($spacing-abbrs) {
  @each $size in $spacing-sizes {
    .#{$name}-#{$size} {
      @include spacing-size($name, $size);
    }
  }
}

/************************************************
*** Spacing classes concerning responsiveness ***
************************************************/

@mixin spacing-responsive($device, $type, $size) {
  @include bp.media-max($device) {
    @include spacing-size($type, $size);
  }
}
